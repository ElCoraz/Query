//********************************************************************************************
Функция СтруктураОтвета(Код, Сообщение = "")
	
	ЗаписьJSON = Новый ЗаписьJSON;
	
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
	
	ЗаписатьJSON(ЗаписьJSON, Новый Структура("code, message", Код, Сообщение)); 
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	Ответ.Заголовки.Вставить("Content-Type", "application/json");
	
	Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
	
	Возврат Ответ;
	
КонецФункции
//********************************************************************************************
Функция ПолучитьЗначениеОбъекта(Объект) 
	
	Если Объект = Null Тогда 
		
		Возврат "";
		
	КонецЕсли;
	
	Если ТипЗнч(Объект) = Тип("Строка") Тогда 
		
		Возврат СокрЛП(Объект);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("Булево") Тогда 
		
		Возврат Объект;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("Число") Тогда 
		
		Возврат Объект;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("Дата") Тогда 
		
		Возврат Объект;
		
	КонецЕсли;
	
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Объект));
	
	Если ОбъектМетаданных = Неопределено Тогда 
		
		Возврат "";
		
	КонецЕсли;
	
	Структура = Новый Структура("Вид, Тип, Представление, УникальныйИдентификатор", "", "", "", "");
	
	Если Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда
		
		Структура.Вид						 = "Справочник";
		Структура.Тип						 = Объект.Метаданные().Имя;
		Структура.Представление				 = СокрЛП(Строка(Объект));
		Структура.УникальныйИдентификатор	 = Строка(Объект.УникальныйИдентификатор());
		
	ИначеЕсли Метаданные.Документы.Содержит(ОбъектМетаданных) Тогда 
		
		Структура.Вид						 = "Документ";
		Структура.Тип						 = Объект.Метаданные().Имя;
		Структура.Представление				 = СокрЛП(Строка(Объект));
		Структура.УникальныйИдентификатор	 = Строка(Объект.УникальныйИдентификатор());
		
	ИначеЕсли Метаданные.Перечисления.Содержит(ОбъектМетаданных) Тогда 
		
		Структура.Вид						 = "Перечисление";
		Структура.Тип						 = Объект.Метаданные().Имя;
		Структура.Представление				 = СокрЛП(Строка(Объект));
		Структура.УникальныйИдентификатор	 = Метаданные.Перечисления[Объект.Метаданные().Имя].ЗначенияПеречисления[Перечисления[Объект.Метаданные().Имя].Индекс(Объект)].Имя;
		
	КонецЕсли;	
	
	Возврат Структура;
	
КонецФункции
//********************************************************************************************
Функция ТЗВМассивСтруктур(ТЗ)
	
	Массив = Новый Массив;
	
	Для Каждого Стр Из ТЗ Цикл 
		
		Структура = Новый Структура;
		
		Для Каждого Колонка Из ТЗ.Колонки Цикл 
			
			Структура.Вставить(Колонка.Имя, ПолучитьЗначениеОбъекта(Стр[Колонка.Имя]));
			
		КонецЦикла;
		
		Массив.Добавить(Структура);
		
	КонецЦикла;
	
	Возврат Массив;
	
КонецФункции
//********************************************************************************************
Функция query(Запрос)
	
	ЧтениеJSON = Новый ЧтениеJSON;
	
	ЧтениеJSON.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку("UTF-8"));
	
	Данные = ПрочитатьJSON(ЧтениеJSON);
	
	ЧтениеJSON.Закрыть();
	
	Если Данные <> Неопределено Тогда 
		
		Запрос = Новый Запрос(Данные.ТекстЗапроса);
		
		Если Данные.Свойство("Параметры") Тогда 
			
			Для А = 0 По Данные.Параметры.Количество() > 0 Цикл  
				
				Для Каждого Элемент Из Данные.Параметры Цикл 
					
					Если ТипЗнч(Элемент.Значение) = Тип("Структура") Тогда
						
						Если Элемент.Значение.Вид = "Справочник" Тогда
							
							Если Элемент.Значение.УникальныйИдентификатор = "00000000-0000-0000-0000-000000000000" Тогда 
								
								Ссылка = Справочники[Элемент.Значение.Тип].ПустаяСсылка();
								
							Иначе
								
								Ссылка = Справочники[Элемент.Значение.Тип].ПолучитьСсылку(Новый УникальныйИдентификатор(Элемент.Значение.УникальныйИдентификатор));
								
								Если Ссылка = Справочники[Элемент.Значение.Тип].ПустаяСсылка() Тогда 
									
									Возврат СтруктураОтвета(400, "Объект параметра " + Элемент.Значение.Вид + "." + Элемент.Значение.Тип + " не найден - " + Элемент.Значение.УникальныйИдентификатор);
									
								КонецЕсли;
								
							КонецЕсли;
							
							Запрос.УстановитьПараметр(Элемент.Ключ, Ссылка);
							
						ИначеЕсли Элемент.Значение.Вид = "Документ" Тогда
							
							Если Элемент.Значение.УникальныйИдентификатор = "00000000-0000-0000-0000-000000000000" Тогда 
								
								Ссылка = Документы[Элемент.Значение.Тип].ПустаяСсылка();
								
							Иначе
								
								Ссылка = Документы[Элемент.Значение.Тип].ПолучитьСсылку(Новый УникальныйИдентификатор(Элемент.Значение.УникальныйИдентификатор));
								
								Если Ссылка = Документы[Элемент.Значение.Тип].ПустаяСсылка() Тогда 
									
									Возврат СтруктураОтвета(400, "Объект параметра " + Элемент.Значение.Вид + "." + Элемент.Значение.Тип + " не найден - " + Элемент.Значение.УникальныйИдентификатор);
									
								КонецЕсли;
								
							КонецЕсли;
							
							Запрос.УстановитьПараметр(Элемент.Ключ, Ссылка);
							
						ИначеЕсли Элемент.Значение.Вид = "Перечисление" Тогда
							
							Если Элемент.Значение.УникальныйИдентификатор = "00000000-0000-0000-0000-000000000000" Тогда 
								
								Ссылка = Перечисления[Элемент.Значение.Тип].ПустаяСсылка();
								
							Иначе
								
								Ссылка = Перечисления[Элемент.Значение.Тип].Получить(Элемент.Значение.УникальныйИдентификатор);
								
								Если Ссылка = Перечисления[Элемент.Значение.Тип].ПустаяСсылка() Тогда 
									
									Возврат СтруктураОтвета(400, "Объект параметра " + Элемент.Значение.Вид + "." + Элемент.Значение.Тип + " не найден - " + Элемент.Значение.УникальныйИдентификатор);
									
								КонецЕсли;
								
							КонецЕсли;
							
							Запрос.УстановитьПараметр(Элемент.Ключ, Ссылка);
							
						КонецЕсли; 
						
					ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Массив") Тогда 
						
						Запрос.УстановитьПараметр(Элемент.Ключ, Элемент.Значение);

					ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Строка") Тогда 
						
						Попытка 
							
							Запрос.УстановитьПараметр(Элемент.Ключ, ПрочитатьДатуJSON(Элемент.Значение, ФорматДатыJSON.ISO));
							
						Исключение
							
							Запрос.УстановитьПараметр(Элемент.Ключ, Элемент.Значение);
							
						КонецПопытки;
						
					Иначе
						
						Запрос.УстановитьПараметр(Элемент.Ключ, Элемент.Значение);
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Попытка
			
			Возврат СтруктураОтвета(200, ТЗВМассивСтруктур(Запрос.Выполнить().Выгрузить()));
			
		Исключение
			
			Возврат СтруктураОтвета(400, ОписаниеОшибки());
			
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат СтруктураОтвета(400, "Нет запроса");
	
КонецФункции
//********************************************************************************************